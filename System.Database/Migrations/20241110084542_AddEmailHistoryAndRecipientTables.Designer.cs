// <auto-generated />
using System;
using System.Database.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace System.Database.Migrations
{
    [DbContext(typeof(CyDbContext))]
    [Migration("20241110084542_AddEmailHistoryAndRecipientTables")]
    partial class AddEmailHistoryAndRecipientTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("System.Database.Entity.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("longtext");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("System.Database.Entity.EmailHistory", b =>
                {
                    b.Property<int>("EmailHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("longtext");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.HasKey("EmailHistoryID");

                    b.ToTable("EmailHistories");
                });

            modelBuilder.Entity("System.Database.Entity.EmailRecipient", b =>
                {
                    b.Property<int>("EmailHistoryID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("EmailHistoryID", "EmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmailRecipients");
                });

            modelBuilder.Entity("System.Database.Entity.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_At")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("System.Database.Entity.EmailRecipient", b =>
                {
                    b.HasOne("System.Database.Entity.EmailHistory", "EmailHistory")
                        .WithMany("Recipients")
                        .HasForeignKey("EmailHistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("System.Database.Entity.Employee", "Employee")
                        .WithMany("EmailRecipients")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailHistory");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("System.Database.Entity.Employee", b =>
                {
                    b.HasOne("System.Database.Entity.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("System.Database.Entity.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("System.Database.Entity.EmailHistory", b =>
                {
                    b.Navigation("Recipients");
                });

            modelBuilder.Entity("System.Database.Entity.Employee", b =>
                {
                    b.Navigation("EmailRecipients");
                });
#pragma warning restore 612, 618
        }
    }
}
